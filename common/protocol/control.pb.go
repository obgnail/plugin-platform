// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: control.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ControlMessage_PluginActionType int32

const (
	ControlMessage_Enable             ControlMessage_PluginActionType = 0
	ControlMessage_Disable            ControlMessage_PluginActionType = 1
	ControlMessage_Start              ControlMessage_PluginActionType = 2
	ControlMessage_Stop               ControlMessage_PluginActionType = 3
	ControlMessage_Install            ControlMessage_PluginActionType = 4
	ControlMessage_UnInstall          ControlMessage_PluginActionType = 5
	ControlMessage_Upgrade            ControlMessage_PluginActionType = 6
	ControlMessage_CheckState         ControlMessage_PluginActionType = 7
	ControlMessage_CheckCompatibility ControlMessage_PluginActionType = 8
)

// Enum value maps for ControlMessage_PluginActionType.
var (
	ControlMessage_PluginActionType_name = map[int32]string{
		0: "Enable",
		1: "Disable",
		2: "Start",
		3: "Stop",
		4: "Install",
		5: "UnInstall",
		6: "Upgrade",
		7: "CheckState",
		8: "CheckCompatibility",
	}
	ControlMessage_PluginActionType_value = map[string]int32{
		"Enable":             0,
		"Disable":            1,
		"Start":              2,
		"Stop":               3,
		"Install":            4,
		"UnInstall":          5,
		"Upgrade":            6,
		"CheckState":         7,
		"CheckCompatibility": 8,
	}
)

func (x ControlMessage_PluginActionType) Enum() *ControlMessage_PluginActionType {
	p := new(ControlMessage_PluginActionType)
	*p = x
	return p
}

func (x ControlMessage_PluginActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlMessage_PluginActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_control_proto_enumTypes[0].Descriptor()
}

func (ControlMessage_PluginActionType) Type() protoreflect.EnumType {
	return &file_control_proto_enumTypes[0]
}

func (x ControlMessage_PluginActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlMessage_PluginActionType.Descriptor instead.
func (ControlMessage_PluginActionType) EnumDescriptor() ([]byte, []int) {
	return file_control_proto_rawDescGZIP(), []int{0, 0}
}

type ControlMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 发起的心跳消息
	Heartbeat uint64 `protobuf:"varint,10,opt,name=Heartbeat,proto3" json:"Heartbeat,omitempty"`
	// 从Host传递过来的报告
	HostReport *ControlMessage_HostReportMessage     `protobuf:"bytes,11,opt,name=HostReport,proto3" json:"HostReport,omitempty"`
	BootReport *ControlMessage_HostBootReportMessage `protobuf:"bytes,12,opt,name=BootReport,proto3" json:"BootReport,omitempty"`
	// 干掉host
	Kill *ControlMessage_KillPluginHostMessage `protobuf:"bytes,13,opt,name=Kill,proto3" json:"Kill,omitempty"`
	// 干掉插件
	KillPlugin        *ControlMessage_KillPluginMessage              `protobuf:"bytes,14,opt,name=killPlugin,proto3" json:"killPlugin,omitempty"`
	CheckPlugin       *ControlMessage_SupportCheckRequestMessage     `protobuf:"bytes,15,opt,name=CheckPlugin,proto3" json:"CheckPlugin,omitempty"`
	CheckPluginResult *ControlMessage_SupportCheckResponseMessage    `protobuf:"bytes,16,opt,name=CheckPluginResult,proto3" json:"CheckPluginResult,omitempty"`
	LifeCycleRequest  *ControlMessage_PluginLifeCycleRequestMessage  `protobuf:"bytes,17,opt,name=LifeCycleRequest,proto3" json:"LifeCycleRequest,omitempty"`
	LifeCycleResponse *ControlMessage_PluginLifeCycleResponseMessage `protobuf:"bytes,18,opt,name=LifeCycleResponse,proto3" json:"LifeCycleResponse,omitempty"`
	StartHost         *ControlMessage_StartHostMessage               `protobuf:"bytes,19,opt,name=StartHost,proto3" json:"StartHost,omitempty"`
}

func (x *ControlMessage) Reset() {
	*x = ControlMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage) ProtoMessage() {}

func (x *ControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_control_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage) Descriptor() ([]byte, []int) {
	return file_control_proto_rawDescGZIP(), []int{0}
}

func (x *ControlMessage) GetHeartbeat() uint64 {
	if x != nil {
		return x.Heartbeat
	}
	return 0
}

func (x *ControlMessage) GetHostReport() *ControlMessage_HostReportMessage {
	if x != nil {
		return x.HostReport
	}
	return nil
}

func (x *ControlMessage) GetBootReport() *ControlMessage_HostBootReportMessage {
	if x != nil {
		return x.BootReport
	}
	return nil
}

func (x *ControlMessage) GetKill() *ControlMessage_KillPluginHostMessage {
	if x != nil {
		return x.Kill
	}
	return nil
}

func (x *ControlMessage) GetKillPlugin() *ControlMessage_KillPluginMessage {
	if x != nil {
		return x.KillPlugin
	}
	return nil
}

func (x *ControlMessage) GetCheckPlugin() *ControlMessage_SupportCheckRequestMessage {
	if x != nil {
		return x.CheckPlugin
	}
	return nil
}

func (x *ControlMessage) GetCheckPluginResult() *ControlMessage_SupportCheckResponseMessage {
	if x != nil {
		return x.CheckPluginResult
	}
	return nil
}

func (x *ControlMessage) GetLifeCycleRequest() *ControlMessage_PluginLifeCycleRequestMessage {
	if x != nil {
		return x.LifeCycleRequest
	}
	return nil
}

func (x *ControlMessage) GetLifeCycleResponse() *ControlMessage_PluginLifeCycleResponseMessage {
	if x != nil {
		return x.LifeCycleResponse
	}
	return nil
}

func (x *ControlMessage) GetStartHost() *ControlMessage_StartHostMessage {
	if x != nil {
		return x.StartHost
	}
	return nil
}

type ControlMessage_HostReportMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *HostDescriptor `protobuf:"bytes,1,opt,name=Host,proto3" json:"Host,omitempty"`
	// 从Host传递过来的错误报告
	ErrorReport []*ErrorMessage `protobuf:"bytes,10,rep,name=ErrorReport,proto3" json:"ErrorReport,omitempty"`
	// 从Host传递的日志消息
	Log []*LogMessage `protobuf:"bytes,11,rep,name=Log,proto3" json:"Log,omitempty"`
	// Host上支持/已经挂载的插件实例
	SupportedList map[string]*PluginInstanceDescriptor `protobuf:"bytes,20,rep,name=SupportedList,proto3" json:"SupportedList,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Host上执行的插件实例列表
	InstanceList map[string]*PluginInstanceDescriptor `protobuf:"bytes,21,rep,name=InstanceList,proto3" json:"InstanceList,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ControlMessage_HostReportMessage) Reset() {
	*x = ControlMessage_HostReportMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlMessage_HostReportMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage_HostReportMessage) ProtoMessage() {}

func (x *ControlMessage_HostReportMessage) ProtoReflect() protoreflect.Message {
	mi := &file_control_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage_HostReportMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage_HostReportMessage) Descriptor() ([]byte, []int) {
	return file_control_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ControlMessage_HostReportMessage) GetHost() *HostDescriptor {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *ControlMessage_HostReportMessage) GetErrorReport() []*ErrorMessage {
	if x != nil {
		return x.ErrorReport
	}
	return nil
}

func (x *ControlMessage_HostReportMessage) GetLog() []*LogMessage {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *ControlMessage_HostReportMessage) GetSupportedList() map[string]*PluginInstanceDescriptor {
	if x != nil {
		return x.SupportedList
	}
	return nil
}

func (x *ControlMessage_HostReportMessage) GetInstanceList() map[string]*PluginInstanceDescriptor {
	if x != nil {
		return x.InstanceList
	}
	return nil
}

type ControlMessage_HostBootReportMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Boot *HostBootDescriptor `protobuf:"bytes,1,opt,name=Boot,proto3" json:"Boot,omitempty"`
	// 从HostBoot传递过来的错误报告
	ErrorReport []*ErrorMessage `protobuf:"bytes,2,rep,name=ErrorReport,proto3" json:"ErrorReport,omitempty"`
	Log         []*LogMessage   `protobuf:"bytes,3,rep,name=Log,proto3" json:"Log,omitempty"`
}

func (x *ControlMessage_HostBootReportMessage) Reset() {
	*x = ControlMessage_HostBootReportMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlMessage_HostBootReportMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage_HostBootReportMessage) ProtoMessage() {}

func (x *ControlMessage_HostBootReportMessage) ProtoReflect() protoreflect.Message {
	mi := &file_control_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage_HostBootReportMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage_HostBootReportMessage) Descriptor() ([]byte, []int) {
	return file_control_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ControlMessage_HostBootReportMessage) GetBoot() *HostBootDescriptor {
	if x != nil {
		return x.Boot
	}
	return nil
}

func (x *ControlMessage_HostBootReportMessage) GetErrorReport() []*ErrorMessage {
	if x != nil {
		return x.ErrorReport
	}
	return nil
}

func (x *ControlMessage_HostBootReportMessage) GetLog() []*LogMessage {
	if x != nil {
		return x.Log
	}
	return nil
}

type ControlMessage_SupportCheckRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 请求体
	ApplicationID      string   `protobuf:"bytes,1,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
	ApplicationVersion *Version `protobuf:"bytes,2,opt,name=ApplicationVersion,proto3" json:"ApplicationVersion,omitempty"`
	SystemVersion      *Version `protobuf:"bytes,3,opt,name=SystemVersion,proto3" json:"SystemVersion,omitempty"`
	InstanceID         string   `protobuf:"bytes,4,opt,name=InstanceID,proto3" json:"InstanceID,omitempty"`
	// 目标HostID
	Host *HostDescriptor `protobuf:"bytes,10,opt,name=Host,proto3" json:"Host,omitempty"`
}

func (x *ControlMessage_SupportCheckRequestMessage) Reset() {
	*x = ControlMessage_SupportCheckRequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlMessage_SupportCheckRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage_SupportCheckRequestMessage) ProtoMessage() {}

func (x *ControlMessage_SupportCheckRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_control_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage_SupportCheckRequestMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage_SupportCheckRequestMessage) Descriptor() ([]byte, []int) {
	return file_control_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ControlMessage_SupportCheckRequestMessage) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

func (x *ControlMessage_SupportCheckRequestMessage) GetApplicationVersion() *Version {
	if x != nil {
		return x.ApplicationVersion
	}
	return nil
}

func (x *ControlMessage_SupportCheckRequestMessage) GetSystemVersion() *Version {
	if x != nil {
		return x.SystemVersion
	}
	return nil
}

func (x *ControlMessage_SupportCheckRequestMessage) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

func (x *ControlMessage_SupportCheckRequestMessage) GetHost() *HostDescriptor {
	if x != nil {
		return x.Host
	}
	return nil
}

type ControlMessage_SupportCheckResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host        *HostDescriptor       `protobuf:"bytes,1,opt,name=Host,proto3" json:"Host,omitempty"`
	Application *PluginFullDescriptor `protobuf:"bytes,2,opt,name=Application,proto3" json:"Application,omitempty"`
	InstanceID  string                `protobuf:"bytes,3,opt,name=InstanceID,proto3" json:"InstanceID,omitempty"`
	Supported   bool                  `protobuf:"varint,20,opt,name=Supported,proto3" json:"Supported,omitempty"`
}

func (x *ControlMessage_SupportCheckResponseMessage) Reset() {
	*x = ControlMessage_SupportCheckResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlMessage_SupportCheckResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage_SupportCheckResponseMessage) ProtoMessage() {}

func (x *ControlMessage_SupportCheckResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_control_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage_SupportCheckResponseMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage_SupportCheckResponseMessage) Descriptor() ([]byte, []int) {
	return file_control_proto_rawDescGZIP(), []int{0, 3}
}

func (x *ControlMessage_SupportCheckResponseMessage) GetHost() *HostDescriptor {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *ControlMessage_SupportCheckResponseMessage) GetApplication() *PluginFullDescriptor {
	if x != nil {
		return x.Application
	}
	return nil
}

func (x *ControlMessage_SupportCheckResponseMessage) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

func (x *ControlMessage_SupportCheckResponseMessage) GetSupported() bool {
	if x != nil {
		return x.Supported
	}
	return false
}

// 插件提供的生命周期方法实现
type ControlMessage_PluginLifeCycleRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host       *HostDescriptor                 `protobuf:"bytes,1,opt,name=Host,proto3" json:"Host,omitempty"`
	Instance   *PluginInstanceDescriptor       `protobuf:"bytes,2,opt,name=Instance,proto3" json:"Instance,omitempty"`
	Action     ControlMessage_PluginActionType `protobuf:"varint,3,opt,name=Action,proto3,enum=protocol.ControlMessage_PluginActionType" json:"Action,omitempty"`
	Reason     string                          `protobuf:"bytes,4,opt,name=Reason,proto3" json:"Reason,omitempty"`
	OldVersion *PluginDescriptor               `protobuf:"bytes,10,opt,name=OldVersion,proto3" json:"OldVersion,omitempty"`
}

func (x *ControlMessage_PluginLifeCycleRequestMessage) Reset() {
	*x = ControlMessage_PluginLifeCycleRequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlMessage_PluginLifeCycleRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage_PluginLifeCycleRequestMessage) ProtoMessage() {}

func (x *ControlMessage_PluginLifeCycleRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_control_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage_PluginLifeCycleRequestMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage_PluginLifeCycleRequestMessage) Descriptor() ([]byte, []int) {
	return file_control_proto_rawDescGZIP(), []int{0, 4}
}

func (x *ControlMessage_PluginLifeCycleRequestMessage) GetHost() *HostDescriptor {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *ControlMessage_PluginLifeCycleRequestMessage) GetInstance() *PluginInstanceDescriptor {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *ControlMessage_PluginLifeCycleRequestMessage) GetAction() ControlMessage_PluginActionType {
	if x != nil {
		return x.Action
	}
	return ControlMessage_Enable
}

func (x *ControlMessage_PluginLifeCycleRequestMessage) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ControlMessage_PluginLifeCycleRequestMessage) GetOldVersion() *PluginDescriptor {
	if x != nil {
		return x.OldVersion
	}
	return nil
}

type ControlMessage_PluginLifeCycleResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     *HostDescriptor           `protobuf:"bytes,1,opt,name=Host,proto3" json:"Host,omitempty"`
	Instance *PluginInstanceDescriptor `protobuf:"bytes,2,opt,name=Instance,proto3" json:"Instance,omitempty"`
	Result   bool                      `protobuf:"varint,4,opt,name=Result,proto3" json:"Result,omitempty"`
	Error    *ErrorMessage             `protobuf:"bytes,5,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *ControlMessage_PluginLifeCycleResponseMessage) Reset() {
	*x = ControlMessage_PluginLifeCycleResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlMessage_PluginLifeCycleResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage_PluginLifeCycleResponseMessage) ProtoMessage() {}

func (x *ControlMessage_PluginLifeCycleResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_control_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage_PluginLifeCycleResponseMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage_PluginLifeCycleResponseMessage) Descriptor() ([]byte, []int) {
	return file_control_proto_rawDescGZIP(), []int{0, 5}
}

func (x *ControlMessage_PluginLifeCycleResponseMessage) GetHost() *HostDescriptor {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *ControlMessage_PluginLifeCycleResponseMessage) GetInstance() *PluginInstanceDescriptor {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *ControlMessage_PluginLifeCycleResponseMessage) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *ControlMessage_PluginLifeCycleResponseMessage) GetError() *ErrorMessage {
	if x != nil {
		return x.Error
	}
	return nil
}

type ControlMessage_StartHostMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host   *HostDescriptor `protobuf:"bytes,1,opt,name=Host,proto3" json:"Host,omitempty"`
	Result bool            `protobuf:"varint,2,opt,name=Result,proto3" json:"Result,omitempty"`
	Error  *ErrorMessage   `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *ControlMessage_StartHostMessage) Reset() {
	*x = ControlMessage_StartHostMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlMessage_StartHostMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage_StartHostMessage) ProtoMessage() {}

func (x *ControlMessage_StartHostMessage) ProtoReflect() protoreflect.Message {
	mi := &file_control_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage_StartHostMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage_StartHostMessage) Descriptor() ([]byte, []int) {
	return file_control_proto_rawDescGZIP(), []int{0, 6}
}

func (x *ControlMessage_StartHostMessage) GetHost() *HostDescriptor {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *ControlMessage_StartHostMessage) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *ControlMessage_StartHostMessage) GetError() *ErrorMessage {
	if x != nil {
		return x.Error
	}
	return nil
}

type ControlMessage_KillPluginHostMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kill bool `protobuf:"varint,1,opt,name=Kill,proto3" json:"Kill,omitempty"`
}

func (x *ControlMessage_KillPluginHostMessage) Reset() {
	*x = ControlMessage_KillPluginHostMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlMessage_KillPluginHostMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage_KillPluginHostMessage) ProtoMessage() {}

func (x *ControlMessage_KillPluginHostMessage) ProtoReflect() protoreflect.Message {
	mi := &file_control_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage_KillPluginHostMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage_KillPluginHostMessage) Descriptor() ([]byte, []int) {
	return file_control_proto_rawDescGZIP(), []int{0, 7}
}

func (x *ControlMessage_KillPluginHostMessage) GetKill() bool {
	if x != nil {
		return x.Kill
	}
	return false
}

type ControlMessage_KillPluginMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceID string `protobuf:"bytes,1,opt,name=InstanceID,proto3" json:"InstanceID,omitempty"`
}

func (x *ControlMessage_KillPluginMessage) Reset() {
	*x = ControlMessage_KillPluginMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlMessage_KillPluginMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage_KillPluginMessage) ProtoMessage() {}

func (x *ControlMessage_KillPluginMessage) ProtoReflect() protoreflect.Message {
	mi := &file_control_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage_KillPluginMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage_KillPluginMessage) Descriptor() ([]byte, []int) {
	return file_control_proto_rawDescGZIP(), []int{0, 8}
}

func (x *ControlMessage_KillPluginMessage) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

var File_control_proto protoreflect.FileDescriptor

var file_control_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe9, 0x16, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x4a, 0x0a, 0x0a, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x4e, 0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x42, 0x0a, 0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4b, 0x69, 0x6c,
	0x6c, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x4a, 0x0a, 0x0a, 0x6b, 0x69, 0x6c, 0x6c,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x12, 0x55, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x62, 0x0a, 0x11, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x11, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x62, 0x0a, 0x10, 0x4c, 0x69, 0x66, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x43, 0x79,
	0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x10, 0x4c, 0x69, 0x66, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x65, 0x0a, 0x11, 0x4c, 0x69, 0x66, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4c,
	0x69, 0x66, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x11, 0x4c, 0x69, 0x66, 0x65, 0x43, 0x79, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48,
	0x6f, 0x73, 0x74, 0x1a, 0xb5, 0x04, 0x0a, 0x11, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x48, 0x6f, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x26, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x63, 0x0a, 0x0d, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0d, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x60,
	0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x15,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x1a, 0x64, 0x0a, 0x12, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x63, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xab, 0x01, 0x0a, 0x15,
	0x48, 0x6f, 0x73, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x52, 0x04, 0x42, 0x6f, 0x6f, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x26, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x4c, 0x6f, 0x67, 0x1a, 0x8c, 0x02, 0x0a, 0x1a, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x41,
	0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x37, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x04, 0x48, 0x6f,
	0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x1a, 0xcb, 0x01, 0x0a, 0x1b, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x46, 0x75, 0x6c,
	0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x1a, 0xa4, 0x02, 0x0a, 0x1d, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x4c, 0x69, 0x66, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x4f, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x52, 0x0a, 0x4f, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0xd4, 0x01,
	0x0a, 0x1e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x43, 0x79, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2c, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x3e,
	0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x1a, 0x86, 0x01, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x6f,
	0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x48, 0x6f, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x2c, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x2b, 0x0a,
	0x15, 0x4b, 0x69, 0x6c, 0x6c, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x1a, 0x33, 0x0a, 0x11, 0x4b, 0x69,
	0x6c, 0x6c, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22,
	0x91, 0x01, 0x0a, 0x10, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70,
	0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x10, 0x04, 0x12,
	0x0d, 0x0a, 0x09, 0x55, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x10, 0x05, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x10, 0x08, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_control_proto_rawDescOnce sync.Once
	file_control_proto_rawDescData = file_control_proto_rawDesc
)

func file_control_proto_rawDescGZIP() []byte {
	file_control_proto_rawDescOnce.Do(func() {
		file_control_proto_rawDescData = protoimpl.X.CompressGZIP(file_control_proto_rawDescData)
	})
	return file_control_proto_rawDescData
}

var file_control_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_control_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_control_proto_goTypes = []interface{}{
	(ControlMessage_PluginActionType)(0),                  // 0: protocol.ControlMessage.PluginActionType
	(*ControlMessage)(nil),                                // 1: protocol.ControlMessage
	(*ControlMessage_HostReportMessage)(nil),              // 2: protocol.ControlMessage.HostReportMessage
	(*ControlMessage_HostBootReportMessage)(nil),          // 3: protocol.ControlMessage.HostBootReportMessage
	(*ControlMessage_SupportCheckRequestMessage)(nil),     // 4: protocol.ControlMessage.SupportCheckRequestMessage
	(*ControlMessage_SupportCheckResponseMessage)(nil),    // 5: protocol.ControlMessage.SupportCheckResponseMessage
	(*ControlMessage_PluginLifeCycleRequestMessage)(nil),  // 6: protocol.ControlMessage.PluginLifeCycleRequestMessage
	(*ControlMessage_PluginLifeCycleResponseMessage)(nil), // 7: protocol.ControlMessage.PluginLifeCycleResponseMessage
	(*ControlMessage_StartHostMessage)(nil),               // 8: protocol.ControlMessage.StartHostMessage
	(*ControlMessage_KillPluginHostMessage)(nil),          // 9: protocol.ControlMessage.KillPluginHostMessage
	(*ControlMessage_KillPluginMessage)(nil),              // 10: protocol.ControlMessage.KillPluginMessage
	nil,                                                   // 11: protocol.ControlMessage.HostReportMessage.SupportedListEntry
	nil,                                                   // 12: protocol.ControlMessage.HostReportMessage.InstanceListEntry
	(*HostDescriptor)(nil),                                // 13: protocol.HostDescriptor
	(*ErrorMessage)(nil),                                  // 14: protocol.ErrorMessage
	(*LogMessage)(nil),                                    // 15: protocol.LogMessage
	(*HostBootDescriptor)(nil),                            // 16: protocol.HostBootDescriptor
	(*Version)(nil),                                       // 17: protocol.Version
	(*PluginFullDescriptor)(nil),                          // 18: protocol.PluginFullDescriptor
	(*PluginInstanceDescriptor)(nil),                      // 19: protocol.PluginInstanceDescriptor
	(*PluginDescriptor)(nil),                              // 20: protocol.PluginDescriptor
}
var file_control_proto_depIdxs = []int32{
	2,  // 0: protocol.ControlMessage.HostReport:type_name -> protocol.ControlMessage.HostReportMessage
	3,  // 1: protocol.ControlMessage.BootReport:type_name -> protocol.ControlMessage.HostBootReportMessage
	9,  // 2: protocol.ControlMessage.Kill:type_name -> protocol.ControlMessage.KillPluginHostMessage
	10, // 3: protocol.ControlMessage.killPlugin:type_name -> protocol.ControlMessage.KillPluginMessage
	4,  // 4: protocol.ControlMessage.CheckPlugin:type_name -> protocol.ControlMessage.SupportCheckRequestMessage
	5,  // 5: protocol.ControlMessage.CheckPluginResult:type_name -> protocol.ControlMessage.SupportCheckResponseMessage
	6,  // 6: protocol.ControlMessage.LifeCycleRequest:type_name -> protocol.ControlMessage.PluginLifeCycleRequestMessage
	7,  // 7: protocol.ControlMessage.LifeCycleResponse:type_name -> protocol.ControlMessage.PluginLifeCycleResponseMessage
	8,  // 8: protocol.ControlMessage.StartHost:type_name -> protocol.ControlMessage.StartHostMessage
	13, // 9: protocol.ControlMessage.HostReportMessage.Host:type_name -> protocol.HostDescriptor
	14, // 10: protocol.ControlMessage.HostReportMessage.ErrorReport:type_name -> protocol.ErrorMessage
	15, // 11: protocol.ControlMessage.HostReportMessage.Log:type_name -> protocol.LogMessage
	11, // 12: protocol.ControlMessage.HostReportMessage.SupportedList:type_name -> protocol.ControlMessage.HostReportMessage.SupportedListEntry
	12, // 13: protocol.ControlMessage.HostReportMessage.InstanceList:type_name -> protocol.ControlMessage.HostReportMessage.InstanceListEntry
	16, // 14: protocol.ControlMessage.HostBootReportMessage.Boot:type_name -> protocol.HostBootDescriptor
	14, // 15: protocol.ControlMessage.HostBootReportMessage.ErrorReport:type_name -> protocol.ErrorMessage
	15, // 16: protocol.ControlMessage.HostBootReportMessage.Log:type_name -> protocol.LogMessage
	17, // 17: protocol.ControlMessage.SupportCheckRequestMessage.ApplicationVersion:type_name -> protocol.Version
	17, // 18: protocol.ControlMessage.SupportCheckRequestMessage.SystemVersion:type_name -> protocol.Version
	13, // 19: protocol.ControlMessage.SupportCheckRequestMessage.Host:type_name -> protocol.HostDescriptor
	13, // 20: protocol.ControlMessage.SupportCheckResponseMessage.Host:type_name -> protocol.HostDescriptor
	18, // 21: protocol.ControlMessage.SupportCheckResponseMessage.Application:type_name -> protocol.PluginFullDescriptor
	13, // 22: protocol.ControlMessage.PluginLifeCycleRequestMessage.Host:type_name -> protocol.HostDescriptor
	19, // 23: protocol.ControlMessage.PluginLifeCycleRequestMessage.Instance:type_name -> protocol.PluginInstanceDescriptor
	0,  // 24: protocol.ControlMessage.PluginLifeCycleRequestMessage.Action:type_name -> protocol.ControlMessage.PluginActionType
	20, // 25: protocol.ControlMessage.PluginLifeCycleRequestMessage.OldVersion:type_name -> protocol.PluginDescriptor
	13, // 26: protocol.ControlMessage.PluginLifeCycleResponseMessage.Host:type_name -> protocol.HostDescriptor
	19, // 27: protocol.ControlMessage.PluginLifeCycleResponseMessage.Instance:type_name -> protocol.PluginInstanceDescriptor
	14, // 28: protocol.ControlMessage.PluginLifeCycleResponseMessage.Error:type_name -> protocol.ErrorMessage
	13, // 29: protocol.ControlMessage.StartHostMessage.Host:type_name -> protocol.HostDescriptor
	14, // 30: protocol.ControlMessage.StartHostMessage.Error:type_name -> protocol.ErrorMessage
	19, // 31: protocol.ControlMessage.HostReportMessage.SupportedListEntry.value:type_name -> protocol.PluginInstanceDescriptor
	19, // 32: protocol.ControlMessage.HostReportMessage.InstanceListEntry.value:type_name -> protocol.PluginInstanceDescriptor
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_control_proto_init() }
func file_control_proto_init() {
	if File_control_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_control_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlMessage_HostReportMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlMessage_HostBootReportMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlMessage_SupportCheckRequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlMessage_SupportCheckResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlMessage_PluginLifeCycleRequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlMessage_PluginLifeCycleResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlMessage_StartHostMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlMessage_KillPluginHostMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlMessage_KillPluginMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_control_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_control_proto_goTypes,
		DependencyIndexes: file_control_proto_depIdxs,
		EnumInfos:         file_control_proto_enumTypes,
		MessageInfos:      file_control_proto_msgTypes,
	}.Build()
	File_control_proto = out.File
	file_control_proto_rawDesc = nil
	file_control_proto_goTypes = nil
	file_control_proto_depIdxs = nil
}
