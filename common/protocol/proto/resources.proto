syntax = "proto3";
package protocol;
option go_package = "..;protocol";

import "common.proto";

message RowMessage{
  repeated bytes Cell = 1;
}
message ColumnDesc{
  int64  Index = 1;
  string Name = 2;
  string Type = 3;
}

message TableMessage{
  repeated RowMessage RowData = 1;
  repeated ColumnDesc Column = 2;
}

message DatabaseMessage{
  message DatabaseRequestMessage{
    string DB = 1;
    string SqlFileName = 2;
    string Statement = 3;
  }

  message DatabaseResponseMessage{
    ErrorMessage Error = 1;
    ErrorMessage DBError = 2;
    TableMessage Data = 5;
    int64 Count = 7;
    int64 LastInsertId = 8;
    int64 RowsAffected = 9;
  }

  DatabaseRequestMessage DBRequest = 1;
  DatabaseResponseMessage DBResponse = 2;
}

message WorkspaceMessage{
  enum IOOperationType{
    Create = 0;
    Rename = 1;
    Remove = 2;
    IsExist = 3;
    Copy = 4;
    List = 5;
    IsDir = 6;
    CreateDir = 7;
    Read = 10;
    ReadLines = 11;
    WriteBytes = 12;
    AppendBytes = 13;
    WriteStrings = 14;
    AppendStrings = 15;
    Zip = 21;
    UnZip = 22;
    Gz = 23;
    UnGz = 24;
    Hash = 25;
  }

  message IORequestMessage{
    IOOperationType Operation = 1;

    string FileName = 2;

    // Rename
    string NewFileName = 3;

    // Copy
    string CopyFileOldPath = 4;
    string CopyFileNewPath = 5;

    // WriteByte
    // AppendByte
    bytes  ByteSlice = 6;

    // MakeDir
    // Walk
    string DirName = 7;

    // WriteString
    // AppendString
    repeated string Content = 8;

    // CreateZip
    string ZipName = 9;
    repeated string ZipTargetFiles = 10;

    // UnpackZip
    string ZipTargetDir = 11;

    // UnpackGz
    string GzTargetFile = 12;

    // ReadLines
    int32 ReadLineBegin = 13;
    int32 ReadLineEnd = 14;
  }

  message IOResponseMessage{
    IOOperationType Operation = 1;
    ErrorMessage Error = 2;

    // IsExist
    // IsDir
    bool Result = 3;

    // ReadLines
    repeated string Lines = 4;

    // ReadFile
    // Hash
    bytes Data = 5;

    // List
    repeated string FileTree = 6;
  }
  IORequestMessage IORequest = 1;
  IOResponseMessage IOResponse = 2;
}

message HttpResourceMessage{
  enum HttpResourceType{
    API = 0;
    Outdoor = 1;
  }
  HttpResourceType ResourceType = 1;
  HttpRequestMessage ResourceHttpRequest = 10;
  HttpResponseMessage ResourceHttpResponse = 11;
}

message Filter{
  repeated string val = 1;
}

message EventMessage{
  enum SubscribeOperationType{
    Subscribe = 0;
    SubscribeWithFilter = 1;
    Unsubscribe = 2;
  }
  SubscribeOperationType SubscribeOperation = 1;
  repeated string Condition = 2;
  map<string, Filter>  SubscribeFilter = 3;
  ErrorMessage Error = 4;
}

message AbilityMessage{
  string Ability = 1;
  bytes Content = 2;
  ErrorMessage Error = 3;
}

message ResourceMessage{
  // 添加消息头，路由数据
  PluginInstanceDescriptor Sender = 1;
  HostDescriptor Host = 2;

  // no response, ack
  LogMessage Log = 20;
  DatabaseMessage Database = 21;
  HttpResourceMessage Http = 22;
  WorkspaceMessage Workspace = 23;
  EventMessage Event = 24;
  AbilityMessage Ability = 25;
}